name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        path: brewtarget
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'

    - name: CMake version
      shell: bash
      run: cmake --version
      
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/brewtarget/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/brewtarget/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE/brewtarget -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/brewtarget/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE --target all

    - name: Test
      working-directory: ${{github.workspace}}/brewtarget/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C $BUILD_TYPE
      run: make && (CTEST_OUTPUT_ON_FAILURE=TRUE make test)
      env:
        QT_QPA_PLATFORM: offscreen
        
    - name: Prepare utils for deb package
      uses: actions/checkout@v2
      with:
        repository: Brewtarget/debian-packaging  
        path: debian-packaging
        
    - name: Dependancies
      shell: bash
      run: sudo apt-get install -y debhelper qtbase5-dev qttools5-dev-tools qtmultimedia5-dev libqt5webkit5-dev libqt5svg5-dev

    - name: Create orig
      working-directory: ${{github.workspace}}/debian-packaging
      shell: bash
      run: ./createorig.sh ../brewtarget
    
    - name: Create package
      working-directory: ${{github.workspace}}/debian-packaging/brewtarget-2.4.0
      run: dpkg-buildpackage -us -uc -d
      shell: bash
    
  
